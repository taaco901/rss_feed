name: Deploy Lambda function to AWS

on:
  push:
    branches:
      - main  # mainブランチにプッシュされたときに実行

jobs:
  deploy:
    runs-on: ubuntu-latest  # Ubuntu環境で実行

    steps:
    # リポジトリをクローン
    - name: Checkout code
      uses: actions/checkout@v2

    # Python環境のセットアップ
    - name: Set up Python 3.12
      uses: actions/setup-python@v2
      with:
        python-version: '3.12'


    # AWS認証の設定（GitHub SecretsにAWS認証情報を設定しておく）
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-northeast-1

    # rss_check Lambda用仮想環境作成と依存関係インストール
    - name: Create virtualenv and install dependencies for rss_check
      run: |
        cd python/rss-check-rss-feed-lambda
        python -m venv venv  # 仮想環境を作成
        source venv/bin/activate
        pip install --upgrade pip
        pip install -r requirements.txt  # rss_checkの依存関係をインストール

    # ファイル名を変更して `lambda_function.py` にリネーム
    - name: Rename rss_check.py to lambda_function.py
      run: |
        cd python/rss-check-rss-feed-lambda
        mv rss_check.py lambda_function.py  # `rss_check.py` を `lambda_function.py` にリネーム

    # 仮想環境内の依存関係を含めてZIPファイルを作成
    - name: Package dependencies and lambda function
      run: |
        cd python/rss-check-rss-feed-lambda
        zip -r lambda_function_rss_check.zip .  # `rss_check`のコードをZIPにまとめる
        cd venv/lib/python3.12/site-packages  # 仮想環境の`site-packages`に移動
        zip -r9 ${OLDPWD}/lambda_function_rss_check.zip .  # 仮想環境内の依存関係をZIPに追加

    # rss_check Lambda関数のパッケージングとデプロイ
    - name: Package and Deploy rss_check Lambda function
      run: |
        cd python/rss-check-rss-feed-lambda
        zip -r lambda_function_rss_check.zip .  # `rss_check`のZIP
        aws lambda update-function-code --function-name rss-check-rss-feed-lambda \
          --zip-file fileb://lambda_function_rss_check.zip  # Lambdaにデプロイ
